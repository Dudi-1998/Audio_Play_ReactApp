{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Audio-React\\\\src\\\\Visualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer = () => {\n  _s();\n  const [audioData, setAudioData] = useState([]);\n  const colors = [\"#61dafb\", \"#ff7e67\", \"#7effa0\", \"#ffb6c1\", \"#a0a0a0\", \"#ffd700\", \"#8a2be2\", \"#ff6347\", \"#00ced1\", \"#ff4500\"];\n  useEffect(() => {\n    // Simulate audio data (replace this with actual audio analysis)\n    const interval = setInterval(() => {\n      const newData = Array.from({\n        length: 10\n      }, () => Math.random() * 100);\n      setAudioData(newData);\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualizer\",\n    children: audioData.map((height, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      style: {\n        height: \"\".concat(height, \"px\"),\n        backgroundColor: colors[index % colors.length]\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualizer, \"YyUJiQeEv6Blq3RbAWdfcxWMV8k=\");\n_c = Visualizer;\nexport default Visualizer;\nvar _c;\n$RefreshReg$(_c, \"Visualizer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Visualizer","_s","audioData","setAudioData","colors","interval","setInterval","newData","Array","from","length","Math","random","clearInterval","className","children","map","height","index","style","concat","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Development/Audio-React/src/Visualizer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Visualizer = () => {\r\n  const [audioData, setAudioData] = useState([]);\r\n  const colors = [\r\n    \"#61dafb\",\r\n    \"#ff7e67\",\r\n    \"#7effa0\",\r\n    \"#ffb6c1\",\r\n    \"#a0a0a0\",\r\n    \"#ffd700\",\r\n    \"#8a2be2\",\r\n    \"#ff6347\",\r\n    \"#00ced1\",\r\n    \"#ff4500\",\r\n  ];\r\n  useEffect(() => {\r\n    // Simulate audio data (replace this with actual audio analysis)\r\n    const interval = setInterval(() => {\r\n      const newData = Array.from({ length: 10 }, () => Math.random() * 100);\r\n      setAudioData(newData);\r\n    }, 500);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return (\r\n    <div className=\"visualizer\">\r\n      {audioData.map((height, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"bar\"\r\n          style={{\r\n            height: `${height}px`,\r\n            backgroundColor: colors[index % colors.length],\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Visualizer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMQ,MAAM,GAAG,CACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EACDP,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACrET,YAAY,CAACI,OAAO,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMM,aAAa,CAACR,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACN,oBACEN,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBb,SAAS,CAACc,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC3BnB,OAAA;MAEEe,SAAS,EAAC,KAAK;MACfK,KAAK,EAAE;QACLF,MAAM,KAAAG,MAAA,CAAKH,MAAM,OAAI;QACrBI,eAAe,EAAEjB,MAAM,CAACc,KAAK,GAAGd,MAAM,CAACM,MAAM;MAC/C;IAAE,GALGQ,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}